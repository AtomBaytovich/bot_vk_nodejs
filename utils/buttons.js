const { Keyboard } = require("vk-io");

const genderKeyboard = Keyboard.builder()
    .textButton({
        label: '–Ø –¥–µ–≤—É—à–∫–∞',
        payload: {
            type: 'female'
        },
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: '–Ø –ø–∞—Ä–µ–Ω—å',
        payload: {
            type: 'male'
        },
        color: Keyboard.POSITIVE_COLOR
    });

const interestingGenderKeyboard = Keyboard.builder()
    .textButton({
        label: '–î–µ–≤—É—à–∫–∏',
        payload: {
            type: 'male'
        },
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: '–ü–∞—Ä–Ω–∏',
        payload: {
            type: 'female'
        },
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: '–í—Å—ë —Ä–∞–≤–Ω–æ',
        payload: {
            type: 'all'
        },
        color: Keyboard.SECONDARY_COLOR
    });


const locationKeyboard = Keyboard.builder()
    .locationRequestButton({})

const noTextKeyboard = Keyboard.builder()
    .textButton({
        label: '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞',
        payload: {
            command: 'no_text'
        },
        color: Keyboard.SECONDARY_COLOR
    })

const noKeyboard = Keyboard.builder().oneTime();

const myPhotoKeyboard = Keyboard.builder()
    .textButton({
        label: '–ú–æ—ë —Ñ–æ—Ç–æ',
        payload: {
            command: 'my_photo'
        },
        color: Keyboard.SECONDARY_COLOR
    })

const confirmFormKeyboard = Keyboard.builder()
    .textButton({
        label: '–î–∞',
        payload: {
            command: 'yes'
        },
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ',
        payload: {
            command: 'no'
        },
        color: Keyboard.SECONDARY_COLOR
    })


const menuKeyboard = Keyboard.builder()
    .textButton({
        label: '1',
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: '2',
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: '3',
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: '‚úà 4',
        color: Keyboard.SECONDARY_COLOR
    })


const menuSearchUserKeyboard = Keyboard.builder()
    .textButton({
        label: '‚ù§',
        payload: {
            command: 'like'
        },
        color: Keyboard.POSITIVE_COLOR
    })
    .textButton({
        label: 'üíå',
        payload: {
            command: 'message'
        },
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: 'üëé',
        payload: {
            command: 'unlike'
        },
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: 'üí§',
        payload: {
            command: 'sleep'
        },
        color: Keyboard.SECONDARY_COLOR
    })

const backScoreKeyboard = Keyboard.builder()
    .textButton({
        label: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ü–µ–Ω–∫–∞–º',
        payload: {
        },
        color: Keyboard.SECONDARY_COLOR
    })

const myTmpKeyboard = Keyboard.builder()
    .textButton({
        label: '1',
        color: Keyboard.NEGATIVE_COLOR
    })
    .textButton({
        label: '2',
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: '3',
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: '‚úà 4',
        color: Keyboard.SECONDARY_COLOR
    })
    .row()
    .textButton({
        label: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ü–µ–Ω–∫–∞–º',
        payload: {
        },
        color: Keyboard.POSITIVE_COLOR
    })


const oneOrTwoKeyboard = Keyboard.builder()
    .textButton({
        label: '1',
        color: Keyboard.SECONDARY_COLOR
    })
    .textButton({
        label: '2',
        color: Keyboard.POSITIVE_COLOR
    })

const seeTmpKeyboard = Keyboard.builder()
    .textButton({
        label: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã',
        color: Keyboard.POSITIVE_COLOR
    })



module.exports = {
    genderKeyboard,
    interestingGenderKeyboard,
    locationKeyboard,
    noTextKeyboard,
    noKeyboard,
    myPhotoKeyboard,
    confirmFormKeyboard,
    menuKeyboard,
    menuSearchUserKeyboard,
    backScoreKeyboard,
    myTmpKeyboard,
    oneOrTwoKeyboard,
    seeTmpKeyboard
}